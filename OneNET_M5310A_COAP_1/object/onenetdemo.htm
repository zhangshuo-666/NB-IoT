<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\object\onenetdemo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\object\onenetdemo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Jun 01 18:45:27 2021
<BR><P>
<H3>Maximum Stack Usage =       2448 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; nbiot_device_connect &rArr; nbiot_handle_buffer &rArr; handle_request &rArr; handle_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[f5]">nbiot_node_read</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f5]">nbiot_node_read</a><BR>
 <LI><a href="#[12a]">observe_check</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12a]">observe_check</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from stm32f10x_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from stm32f10x_it.o(i.RTC_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from usart3.o(i.USART3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4c]">USART3_Write</a> from usart3.o(i.USART3_Write) referenced from usart3.o(i.USART3_Init)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[4a]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[49]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[4e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[4f]">execute_callback</a> from main.o(i.execute_callback) referenced from main.o(i.main)
 <LI><a href="#[4d]">fputc</a> from usart1.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[4b]">isspace</a> from isspace_c.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[50]">read_callback</a> from main.o(i.read_callback) referenced from main.o(i.main)
 <LI><a href="#[52]">registraction_reply</a> from registraction.o(i.registraction_reply) referenced from registraction.o(i.nbiot_register_start)
 <LI><a href="#[53]">registraction_update_reply</a> from registraction.o(i.registraction_update_reply) referenced from registraction.o(i.nbiot_register_update)
 <LI><a href="#[51]">write_callback</a> from main.o(i.write_callback) referenced from main.o(i.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[137]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[54]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[71]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[138]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[139]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[13a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[13b]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[13c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[13d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12d]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_rand
</UL>

<P><STRONG><a name="[12c]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_rand
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_put
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_get
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_rx
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_write_rsp
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_update
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_request
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_execute_rsp
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_delobj
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_addobj
</UL>

<P><STRONG><a name="[13e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[140]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringbuf_clear
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memb_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_write_rsp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_execute_rsp
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_delobj
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_addobj
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_read
</UL>

<P><STRONG><a name="[116]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_object_add
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_rx
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[104]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_object_add
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_write_rsp
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_update
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_request
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_execute_rsp
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_delobj
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_addobj
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
</UL>

<P><STRONG><a name="[b9]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_rx
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_handle_buffer
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
</UL>

<P><STRONG><a name="[b7]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_update
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_miplconf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_send_buffer
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_read
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
</UL>

<P><STRONG><a name="[115]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mipl_generate
</UL>

<P><STRONG><a name="[fd]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcTemperatureC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcRH
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcTemperatureC
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcRH
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_BH1750
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcTemperatureC
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcRH
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_BH1750
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;res_update
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcTemperatureC
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcRH
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_BH1750
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcTemperatureC
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcRH
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_BH1750
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[144]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[145]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[146]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[5b]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[64]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[63]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[55]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[147]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[148]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>isspace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isspace_c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[75]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[49]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>__ctype_lookup</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[77]"></a>AD7124_8_GPIO_INIT</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ad7124.o(i.AD7124_8_GPIO_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AD7124_8_GPIO_INIT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
</UL>

<P><STRONG><a name="[79]"></a>AD7124_8_INIT1</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, ad7124.o(i.AD7124_8_INIT1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AD7124_8_INIT1 &rArr; AD7124_8_Write &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>AD7124_8_Read</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ad7124.o(i.AD7124_8_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AD7124_8_Read &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
</UL>

<P><STRONG><a name="[80]"></a>AD7124_8_Read_Byte</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ad7124.o(i.AD7124_8_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AD7124_8_Read_Byte &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
</UL>

<P><STRONG><a name="[81]"></a>AD7124_8_Reset</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ad7124.o(i.AD7124_8_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AD7124_8_Reset &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>AD7124_8_Write</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ad7124.o(i.AD7124_8_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AD7124_8_Write &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_INIT1
</UL>

<P><STRONG><a name="[82]"></a>ADXL345_Init</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, adxl345.o(i.ADXL345_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ADXL345_Init &rArr; I2C_WriteByte &rArr; IIC_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
</UL>

<P><STRONG><a name="[86]"></a>BH1750_test</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bh1750.o(i.BH1750_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BH1750_test &rArr; Convert_BH1750 &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_BH1750
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_BH1750
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;res_update
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_callback
</UL>

<P><STRONG><a name="[8b]"></a>Beep_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, beep.o(i.Beep_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Beep_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
</UL>

<P><STRONG><a name="[8d]"></a>Beep_Set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, beep.o(i.Beep_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Beep_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>Cmd_Write_BH1750</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bh1750.o(i.Cmd_Write_BH1750))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cmd_Write_BH1750 &rArr; IIC_1750_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Stop
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_BH1750
</UL>

<P><STRONG><a name="[8a]"></a>Convert_BH1750</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bh1750.o(i.Convert_BH1750))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Convert_BH1750 &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BH1750_test
</UL>

<P><STRONG><a name="[c2]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Write
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[cf]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[c3]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Write
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[c7]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>Delay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ad7124.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Reset
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_INIT1
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Write
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read_Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read
</UL>

<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI15_10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M5310_Power_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_GPIO_INIT
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Init
</UL>

<P><STRONG><a name="[7e]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read_Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RecvByte
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_RecvByte
</UL>

<P><STRONG><a name="[7a]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Reset
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_INIT1
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Write
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read_Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SendByte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RecvByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Stop
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_SendByte
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_RecvByte
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_NAck
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Ack
</UL>

<P><STRONG><a name="[7f]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Reset
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M5310_Power_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Write
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read_Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SendByte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RecvByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Stop
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_SendByte
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_RecvByte
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_NAck
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Ack
</UL>

<P><STRONG><a name="[8e]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led4_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led1_Set
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led2_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led3_Set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Set
</UL>

<P><STRONG><a name="[56]"></a>HardFaultHandler</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32f10x_it.o(i.HardFaultHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HardFaultHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[84]"></a>I2C_ReadByte</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, i2c.o(i.I2C_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_ReadByte &rArr; IIC_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SendByte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RecvByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADXL345_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_read_user_reg
</UL>

<P><STRONG><a name="[85]"></a>I2C_WriteByte</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, i2c.o(i.I2C_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_WriteByte &rArr; IIC_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADXL345_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_reset
</UL>

<P><STRONG><a name="[9c]"></a>IIC_1750_Ack</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bh1750.o(i.IIC_1750_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_1750_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
</UL>

<P><STRONG><a name="[9d]"></a>IIC_1750_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bh1750.o(i.IIC_1750_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_1750_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_SpeedCtl
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
</UL>

<P><STRONG><a name="[9f]"></a>IIC_1750_NAck</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bh1750.o(i.IIC_1750_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_1750_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
</UL>

<P><STRONG><a name="[a0]"></a>IIC_1750_RecvByte</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, bh1750.o(i.IIC_1750_RecvByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_1750_RecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
</UL>

<P><STRONG><a name="[91]"></a>IIC_1750_SendByte</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bh1750.o(i.IIC_1750_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_1750_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_Write_BH1750
</UL>

<P><STRONG><a name="[9e]"></a>IIC_1750_SpeedCtl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bh1750.o(i.IIC_1750_SpeedCtl))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Init
</UL>

<P><STRONG><a name="[90]"></a>IIC_1750_Start</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bh1750.o(i.IIC_1750_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_1750_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_Write_BH1750
</UL>

<P><STRONG><a name="[93]"></a>IIC_1750_Stop</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bh1750.o(i.IIC_1750_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_1750_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_Write_BH1750
</UL>

<P><STRONG><a name="[92]"></a>IIC_1750_WaitAck</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, bh1750.o(i.IIC_1750_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_1750_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Stop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_Write_BH1750
</UL>

<P><STRONG><a name="[a1]"></a>IIC_Ack</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(i.IIC_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[a2]"></a>IIC_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, i2c.o(i.IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SpeedCtl
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
</UL>

<P><STRONG><a name="[9a]"></a>IIC_NAck</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(i.IIC_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[99]"></a>IIC_RecvByte</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, i2c.o(i.IIC_RecvByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_RecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[97]"></a>IIC_SendByte</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, i2c.o(i.IIC_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[a3]"></a>IIC_SpeedCtl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2c.o(i.IIC_SpeedCtl))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[96]"></a>IIC_Start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(i.IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[9b]"></a>IIC_Stop</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(i.IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
</UL>

<P><STRONG><a name="[98]"></a>IIC_WaitAck</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, i2c.o(i.IIC_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[a4]"></a>Key_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, key.o(i.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
</UL>

<P><STRONG><a name="[a5]"></a>Led1_Set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, led.o(i.Led1_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Led1_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_callback
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_step
</UL>

<P><STRONG><a name="[a6]"></a>Led2_Set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, led.o(i.Led2_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Led2_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
</UL>

<P><STRONG><a name="[a7]"></a>Led3_Set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, led.o(i.Led3_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Led3_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netdev_init
</UL>

<P><STRONG><a name="[a8]"></a>Led4_Set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, led.o(i.Led4_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Led4_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
</UL>

<P><STRONG><a name="[a9]"></a>Led_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, led.o(i.Led_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Led_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led4_Set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led1_Set
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led2_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led3_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
</UL>

<P><STRONG><a name="[aa]"></a>M5310_Power_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, m5310.o(i.M5310_Power_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = M5310_Power_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[131]"></a>NVIC_GenerateSystemReset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, misc.o(i.NVIC_GenerateSystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_reset
</UL>

<P><STRONG><a name="[c1]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>Peripheral_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, environment.o(i.Peripheral_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Peripheral_Init &rArr; ADXL345_Init &rArr; I2C_WriteByte &rArr; IIC_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADXL345_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_GPIO_INIT
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
</UL>

<P><STRONG><a name="[c9]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[ca]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[d3]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[8c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M5310_Power_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Init
</UL>

<P><STRONG><a name="[d2]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[d4]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>RTC_Init</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, time.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_Init &rArr; mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time_init
</UL>

<P><STRONG><a name="[89]"></a>Read_BH1750</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bh1750.o(i.Read_BH1750))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read_BH1750 &rArr; IIC_1750_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Stop
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_SendByte
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_RecvByte
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_NAck
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BH1750_test
</UL>

<P><STRONG><a name="[ad]"></a>SHT20_GetValue</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, sht20.o(i.SHT20_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SHT20_GetValue &rArr; SHT2x_MeasureHM &rArr; SHT2x_CalcTemperatureC &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDelay
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SpeedCtl
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_reset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_read_user_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;res_update
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_callback
</UL>

<P><STRONG><a name="[ae]"></a>SHT20_read_user_reg</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sht20.o(i.SHT20_read_user_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SHT20_read_user_reg &rArr; I2C_ReadByte &rArr; IIC_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
</UL>

<P><STRONG><a name="[b0]"></a>SHT20_reset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sht20.o(i.SHT20_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SHT20_reset &rArr; I2C_WriteByte &rArr; IIC_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
</UL>

<P><STRONG><a name="[b1]"></a>SHT2x_CalcRH</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, sht20.o(i.SHT2x_CalcRH))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SHT2x_CalcRH &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[b2]"></a>SHT2x_CalcTemperatureC</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, sht20.o(i.SHT2x_CalcTemperatureC))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SHT2x_CalcTemperatureC &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[b3]"></a>SHT2x_CheckCrc</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, sht20.o(i.SHT2x_CheckCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SHT2x_CheckCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[af]"></a>SHT2x_MeasureHM</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, sht20.o(i.SHT2x_MeasureHM))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SHT2x_MeasureHM &rArr; SHT2x_CalcTemperatureC &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CheckCrc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcTemperatureC
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_CalcRH
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SendByte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RecvByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>SendCmd</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, at_cmd.o(i.SendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringbuf_clear
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netdev_init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mipl_generate
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_update
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_request
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_delobj
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_addobj
</UL>

<P><STRONG><a name="[ba]"></a>SentData</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, at_cmd.o(i.SentData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringbuf_clear
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_write_rsp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_execute_rsp
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_SendData
</UL>

<P><STRONG><a name="[87]"></a>Start_BH1750</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bh1750.o(i.Start_BH1750))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Start_BH1750 &rArr; Cmd_Write_BH1750 &rArr; IIC_1750_WaitAck &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_Write_BH1750
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BH1750_test
</UL>

<P><STRONG><a name="[e1]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>USART1_Init</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, usart1.o(i.USART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
</UL>

<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, usart3.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART3_IRQHandler &rArr; fifo_put
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led3_Set
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCurrDataCounter
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringbuf_elements
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringbuf_clear
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_put
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>USART3_Init</STRONG> (Thumb, 312 bytes, Stack size 72 bytes, usart3.o(i.USART3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = USART3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_cmd_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringbuf_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
</UL>

<P><STRONG><a name="[4c]"></a>USART3_Write</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, usart3.o(i.USART3_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART3_Write &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usart3.o(i.USART3_Init)
</UL>
<P><STRONG><a name="[bf]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[d1]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[cb]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[ed]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[c0]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[be]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[ec]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[149]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[95]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_callback
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_callback
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_callback
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFaultHandler
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_udp_recv
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netdev_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_write_rsp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_execute_rsp
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_step
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_update
</UL>

<P><STRONG><a name="[14a]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[14b]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[d7]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[14c]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[126]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
</UL>

<P><STRONG><a name="[14d]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[14e]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[de]"></a>__read_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__read_errno))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[14f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[150]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[151]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[df]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[76]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[dd]"></a>atof</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, atof.o(i.atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_write
</UL>

<P><STRONG><a name="[e0]"></a>delay_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, time.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time_init
</UL>

<P><STRONG><a name="[10b]"></a>delay_ms_sub</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, time.o(i.delay_ms_sub))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
</UL>

<P><STRONG><a name="[4f]"></a>execute_callback</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, main.o(i.execute_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = execute_callback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[e8]"></a>fifo_get</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, fifo.o(i.fifo_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fifo_get &rArr; memb_free
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memb_free
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_rx
</UL>

<P><STRONG><a name="[cd]"></a>fifo_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, fifo.o(i.fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fifo_init &rArr; memb_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memb_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[c5]"></a>fifo_put</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, fifo.o(i.fifo_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fifo_put
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memb_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usart1.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[121]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
</UL>

<P><STRONG><a name="[ff]"></a>init_miplconf</STRONG> (Thumb, 84 bytes, Stack size 560 bytes, m5310.o(i.init_miplconf))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = init_miplconf &rArr; mipl_generate &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mipl_generate
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_create
</UL>

<P><STRONG><a name="[101]"></a>ip_SendData</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, m5310.o(i.ip_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ip_SendData &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_udp_send
</UL>

<P><STRONG><a name="[102]"></a>m5310_addobj</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, m5310.o(i.m5310_addobj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = m5310_addobj &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_object_add
</UL>

<P><STRONG><a name="[e4]"></a>m5310_delobj</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, m5310.o(i.m5310_delobj))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = m5310_delobj &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_nodes
</UL>

<P><STRONG><a name="[105]"></a>m5310_discover_rsp</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, m5310.o(i.m5310_discover_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = m5310_discover_rsp &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_object_add
</UL>

<P><STRONG><a name="[f0]"></a>m5310_execute_rsp</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, m5310.o(i.m5310_execute_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = m5310_execute_rsp &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_execute
</UL>

<P><STRONG><a name="[106]"></a>m5310_notify_upload</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, m5310.o(i.m5310_notify_upload))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = m5310_notify_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_send_buffer
</UL>

<P><STRONG><a name="[107]"></a>m5310_read_upload</STRONG> (Thumb, 346 bytes, Stack size 48 bytes, m5310.o(i.m5310_read_upload))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_send_buffer
</UL>

<P><STRONG><a name="[108]"></a>m5310_register_request</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, m5310.o(i.m5310_register_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = m5310_register_request &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_start
</UL>

<P><STRONG><a name="[109]"></a>m5310_register_update</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, m5310.o(i.m5310_register_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = m5310_register_update &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_update
</UL>

<P><STRONG><a name="[10a]"></a>m5310_write_rsp</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, m5310.o(i.m5310_write_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = m5310_write_rsp &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_write
</UL>

<P><STRONG><a name="[88]"></a>mDelay</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, time.o(i.mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms_sub
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BH1750_test
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_sleep
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT2x_MeasureHM
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 574 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2448<LI>Call Chain = main &rArr; nbiot_device_connect &rArr; nbiot_handle_buffer &rArr; handle_request &rArr; handle_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_resource_add
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_reset
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_object_add
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_destroy
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_create
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led4_Set
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Reset
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_INIT1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;res_update
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[125]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_malloc
</UL>

<P><STRONG><a name="[eb]"></a>memb_alloc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, memb.o(i.memb_alloc))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_put
</UL>

<P><STRONG><a name="[e9]"></a>memb_free</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, memb.o(i.memb_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memb_free
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_get
</UL>

<P><STRONG><a name="[ea]"></a>memb_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, memb.o(i.memb_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memb_init
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
</UL>

<P><STRONG><a name="[100]"></a>mipl_generate</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, m5310.o(i.mipl_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mipl_generate &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_miplconf
</UL>

<P><STRONG><a name="[f8]"></a>nbiot_atoi</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, utils.o(i.nbiot_atoi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nbiot_atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_send_buffer
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_write
</UL>

<P><STRONG><a name="[111]"></a>nbiot_device_connect</STRONG> (Thumb, 232 bytes, Stack size 1056 bytes, nbiot.o(i.nbiot_device_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 2440<LI>Call Chain = nbiot_device_connect &rArr; nbiot_handle_buffer &rArr; handle_request &rArr; handle_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_sleep
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_recv_buffer
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_handle_buffer
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_step
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_start
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>nbiot_device_create</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, nbiot.o(i.nbiot_device_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = nbiot_device_create &rArr; init_miplconf &rArr; mipl_generate &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_malloc
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_miplconf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_rand
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_memzero
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>nbiot_device_destroy</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, nbiot.o(i.nbiot_device_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nbiot_device_destroy &rArr; device_free_nodes &rArr; m5310_delobj &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_transactions
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_observes
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_nodes
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>nbiot_device_step</STRONG> (Thumb, 264 bytes, Stack size 1048 bytes, nbiot.o(i.nbiot_device_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 2432<LI>Call Chain = nbiot_device_step &rArr; nbiot_handle_buffer &rArr; handle_request &rArr; handle_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_sleep
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_recv_buffer
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_handle_buffer
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_step
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_step
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_step
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>nbiot_free</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, memory.o(i.nbiot_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nbiot_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_resource_add
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_destroy
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_transactions
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_del
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_add
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_del
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_write
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_free
</UL>

<P><STRONG><a name="[10c]"></a>nbiot_init_environment</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, environment.o(i.nbiot_init_environment))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = nbiot_init_environment &rArr; USART3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netdev_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M5310_Power_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[103]"></a>nbiot_itoa</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, utils.o(i.nbiot_itoa))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nbiot_itoa &rArr; nbiot_strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_object_add
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_write_rsp
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_update
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_request
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_execute_rsp
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_delobj
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_addobj
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
</UL>

<P><STRONG><a name="[128]"></a>nbiot_list_add</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nblist.o(i.nbiot_list_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nbiot_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_resource_add
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_add
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
</UL>

<P><STRONG><a name="[129]"></a>nbiot_list_del</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, nblist.o(i.nbiot_list_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nbiot_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_resource_add
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_del
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_del
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
</UL>

<P><STRONG><a name="[e3]"></a>nbiot_list_free</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nblist.o(i.nbiot_list_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nbiot_list_free &rArr; nbiot_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_transactions
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_observes
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_free_nodes
</UL>

<P><STRONG><a name="[fb]"></a>nbiot_list_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nblist.o(i.nbiot_list_get))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_resource_add
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_del
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_find
</UL>

<P><STRONG><a name="[11c]"></a>nbiot_malloc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, memory.o(i.nbiot_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nbiot_malloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_resource_add
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_add
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_strdup
</UL>

<P><STRONG><a name="[133]"></a>nbiot_memmove</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, utils.o(i.nbiot_memmove))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nbiot_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_add
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_strdup
</UL>

<P><STRONG><a name="[11d]"></a>nbiot_memzero</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, utils.o(i.nbiot_memzero))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_resource_add
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_add
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
</UL>

<P><STRONG><a name="[ef]"></a>nbiot_node_find</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, node.o(i.nbiot_node_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nbiot_node_find
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_write
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_read
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_observe
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_execute
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_step
</UL>

<P><STRONG><a name="[f5]"></a>nbiot_node_read</STRONG> (Thumb, 450 bytes, Stack size 72 bytes, node.o(i.nbiot_node_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = nbiot_node_read &rArr;  nbiot_node_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_read
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_read
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
</UL>

<P><STRONG><a name="[fe]"></a>nbiot_node_write</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, node.o(i.nbiot_node_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = nbiot_node_write &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_write_rsp
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_strdup
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_write
</UL>

<P><STRONG><a name="[110]"></a>nbiot_object_add</STRONG> (Thumb, 262 bytes, Stack size 632 bytes, nbiot.o(i.nbiot_object_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = nbiot_object_add &rArr; m5310_addobj &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_discover_rsp
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_addobj
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>nbiot_observe_add</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, observe.o(i.nbiot_observe_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = nbiot_observe_add &rArr; nbiot_malloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_malloc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_get
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_del
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_add
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_memzero
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_observe
</UL>

<P><STRONG><a name="[f3]"></a>nbiot_observe_del</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, observe.o(i.nbiot_observe_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nbiot_observe_del &rArr; nbiot_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_get
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_observe
</UL>

<P><STRONG><a name="[120]"></a>nbiot_observe_step</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, observe.o(i.nbiot_observe_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = nbiot_observe_step &rArr; observe_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_read
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_check
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_find
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
</UL>

<P><STRONG><a name="[11e]"></a>nbiot_rand</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, utils.o(i.nbiot_rand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nbiot_rand
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_create
</UL>

<P><STRONG><a name="[118]"></a>nbiot_recv_buffer</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, nbiot.o(i.nbiot_recv_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = nbiot_recv_buffer &rArr; nbiot_udp_recv &rArr; netif_rx &rArr; fifo_get &rArr; memb_free
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_udp_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
</UL>

<P><STRONG><a name="[117]"></a>nbiot_register_start</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, registraction.o(i.nbiot_register_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = nbiot_register_start &rArr; m5310_register_request &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_request
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_add
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
</UL>

<P><STRONG><a name="[11f]"></a>nbiot_register_step</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, registraction.o(i.nbiot_register_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = nbiot_register_step &rArr; nbiot_register_update &rArr; m5310_register_update &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led1_Set
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_update
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
</UL>

<P><STRONG><a name="[130]"></a>nbiot_register_update</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, registraction.o(i.nbiot_register_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = nbiot_register_update &rArr; m5310_register_update &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_register_update
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_add
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_step
</UL>

<P><STRONG><a name="[112]"></a>nbiot_reset</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, environment.o(i.nbiot_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nbiot_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_GenerateSystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10f]"></a>nbiot_resource_add</STRONG> (Thumb, 318 bytes, Stack size 56 bytes, nbiot.o(i.nbiot_resource_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = nbiot_resource_add &rArr; nbiot_malloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_malloc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_get
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_del
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_add
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_memzero
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f6]"></a>nbiot_send_buffer</STRONG> (Thumb, 330 bytes, Stack size 1088 bytes, nbiot.o(i.nbiot_send_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_read_upload
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_notify_upload
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_read
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_read
</UL>

<P><STRONG><a name="[11b]"></a>nbiot_sleep</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, time.o(i.nbiot_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nbiot_sleep &rArr; mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
</UL>

<P><STRONG><a name="[127]"></a>nbiot_strdup</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, utils.o(i.nbiot_strdup))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nbiot_strdup &rArr; nbiot_malloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_malloc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_strlen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_write
</UL>

<P><STRONG><a name="[132]"></a>nbiot_strlen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, utils.o(i.nbiot_strlen))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_strdup
</UL>

<P><STRONG><a name="[124]"></a>nbiot_strncpy</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, utils.o(i.nbiot_strncpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nbiot_strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_itoa
</UL>

<P><STRONG><a name="[b8]"></a>nbiot_time</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, time.o(i.nbiot_time))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;res_update
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registraction_update_reply
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registraction_reply
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_rand
</UL>

<P><STRONG><a name="[122]"></a>nbiot_time_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, time.o(i.nbiot_time_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nbiot_time_init &rArr; RTC_Init &rArr; mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
</UL>

<P><STRONG><a name="[12f]"></a>nbiot_transaction_add</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, transaction.o(i.nbiot_transaction_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = nbiot_transaction_add &rArr; nbiot_malloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_malloc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_add
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_memzero
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_update
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_register_start
</UL>

<P><STRONG><a name="[fc]"></a>nbiot_transaction_del</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, transaction.o(i.nbiot_transaction_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nbiot_transaction_del &rArr; nbiot_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_step
</UL>

<P><STRONG><a name="[11a]"></a>nbiot_transaction_step</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, transaction.o(i.nbiot_transaction_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nbiot_transaction_step &rArr; nbiot_udp_send &rArr; ip_SendData &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_udp_send
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_del
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
</UL>

<P><STRONG><a name="[12e]"></a>nbiot_udp_recv</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, socket.o(i.nbiot_udp_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1100<LI>Call Chain = nbiot_udp_recv &rArr; netif_rx &rArr; fifo_get &rArr; memb_free
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_rx
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_recv_buffer
</UL>

<P><STRONG><a name="[134]"></a>nbiot_udp_send</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, socket.o(i.nbiot_udp_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nbiot_udp_send &rArr; ip_SendData &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_step
</UL>

<P><STRONG><a name="[123]"></a>netdev_init</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, m5310.o(i.netdev_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = netdev_init &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led3_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_init_environment
</UL>

<P><STRONG><a name="[135]"></a>netif_rx</STRONG> (Thumb, 74 bytes, Stack size 1040 bytes, m5310.o(i.netif_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 1084<LI>Call Chain = netif_rx &rArr; fifo_get &rArr; memb_free
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_get
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_udp_recv
</UL>

<P><STRONG><a name="[50]"></a>read_callback</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, main.o(i.read_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = read_callback &rArr; SHT20_GetValue &rArr; SHT2x_MeasureHM &rArr; SHT2x_CalcTemperatureC &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BH1750_test
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[ce]"></a>register_cmd_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at_cmd.o(i.register_cmd_handler))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[114]"></a>res_update</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, main.o(i.res_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = res_update &rArr; SHT20_GetValue &rArr; SHT2x_MeasureHM &rArr; SHT2x_CalcTemperatureC &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_Getvalue
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BH1750_test
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>ringbuf_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ringbuf.o(i.ringbuf_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ringbuf_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SentData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmd
</UL>

<P><STRONG><a name="[c4]"></a>ringbuf_elements</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ringbuf.o(i.ringbuf_elements))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[cc]"></a>ringbuf_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ringbuf.o(i.ringbuf_init))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Init
</UL>

<P><STRONG><a name="[83]"></a>uDelay</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, time.o(i.uDelay))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT20_GetValue
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADXL345_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WaitAck
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_SendByte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RecvByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BH1750
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_WaitAck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Stop
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_SendByte
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_RecvByte
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_NAck
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_1750_Ack
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_Write_BH1750
</UL>

<P><STRONG><a name="[136]"></a>voltage_Getvalue</STRONG> (Thumb, 170 bytes, Stack size 88 bytes, ad7124.o(i.voltage_Getvalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = voltage_Getvalue &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read_Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_8_Read
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;res_update
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_callback
</UL>

<P><STRONG><a name="[51]"></a>write_callback</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, main.o(i.write_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = write_callback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led1_Set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[bb]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[bc]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HardFault_Handler &rArr; HardFaultHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12a]"></a>observe_check</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, observe.o(i.observe_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + In Cycle
<LI>Call Chain = observe_check &rArr;  observe_check (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_check
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_step
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;observe_check
</UL>

<P><STRONG><a name="[12b]"></a>observe_read</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, observe.o(i.observe_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = observe_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_send_buffer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_step
</UL>

<P><STRONG><a name="[52]"></a>registraction_reply</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, registraction.o(i.registraction_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = registraction_reply
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> registraction.o(i.nbiot_register_start)
</UL>
<P><STRONG><a name="[53]"></a>registraction_update_reply</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, registraction.o(i.registraction_update_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = registraction_update_reply
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> registraction.o(i.nbiot_register_update)
</UL>
<P><STRONG><a name="[e2]"></a>device_free_nodes</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, nbiot.o(i.device_free_nodes))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = device_free_nodes &rArr; m5310_delobj &rArr; SendCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_delobj
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_destroy
</UL>

<P><STRONG><a name="[e5]"></a>device_free_observes</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, nbiot.o(i.device_free_observes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = device_free_observes &rArr; nbiot_list_free &rArr; nbiot_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_destroy
</UL>

<P><STRONG><a name="[e6]"></a>device_free_transactions</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, nbiot.o(i.device_free_transactions))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = device_free_transactions &rArr; nbiot_list_free &rArr; nbiot_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_free
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_destroy
</UL>

<P><STRONG><a name="[ee]"></a>handle_execute</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, nbiot.o(i.handle_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = handle_execute &rArr; m5310_execute_rsp &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m5310_execute_rsp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_find
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
</UL>

<P><STRONG><a name="[f1]"></a>handle_observe</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, nbiot.o(i.handle_observe))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = handle_observe &rArr; nbiot_observe_add &rArr; nbiot_malloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_del
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_observe_add
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_find
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
</UL>

<P><STRONG><a name="[f4]"></a>handle_read</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, nbiot.o(i.handle_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248<LI>Call Chain = handle_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_send_buffer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_read
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_find
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
</UL>

<P><STRONG><a name="[f7]"></a>handle_request</STRONG> (Thumb, 528 bytes, Stack size 72 bytes, nbiot.o(i.handle_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = handle_request &rArr; handle_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_write
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_read
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_execute
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_atoi
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_handle_buffer
</UL>

<P><STRONG><a name="[fa]"></a>handle_transaction</STRONG> (Thumb, 634 bytes, Stack size 64 bytes, nbiot.o(i.handle_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = handle_transaction &rArr; handle_observe &rArr; nbiot_observe_add &rArr; nbiot_malloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led4_Set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_observe
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_transaction_del
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_list_get
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_atoi
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_handle_buffer
</UL>

<P><STRONG><a name="[f9]"></a>handle_write</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, nbiot.o(i.handle_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = handle_write &rArr; nbiot_node_write &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_write
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_node_find
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
</UL>

<P><STRONG><a name="[119]"></a>nbiot_handle_buffer</STRONG> (Thumb, 266 bytes, Stack size 64 bytes, nbiot.o(i.nbiot_handle_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384<LI>Call Chain = nbiot_handle_buffer &rArr; handle_request &rArr; handle_read &rArr; nbiot_send_buffer &rArr; m5310_read_upload &rArr; SentData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_transaction
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_request
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_step
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbiot_device_connect
</UL>

<P><STRONG><a name="[d8]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d6]"></a>_printf_core</STRONG> (Thumb, 1704 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[db]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[da]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[6d]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[73]"></a>_fp_value</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
