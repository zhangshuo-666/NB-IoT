#ifndef M5310
#define M5310

#include <stdint.h>
#include <string.h>
#include "internal.h"


#define COAP_NO_ERROR                     0x00
#define COAP_IGNORE                       0x01
#define COAP_CREATED_201                  0x41 /* CREATED */
#define COAP_DELETED_202                  0x42 /* DELETED */
#define COAP_VALID_203                    0x43 /* NOT_MODIFIED */
#define COAP_CHANGED_204                  0x44 /* CHANGED */
#define COAP_CONTENT_205                  0x45 /* OK */
#define COAP_BAD_REQUEST_400              0x80 /* BAD_REQUEST */
#define COAP_UNAUTHORIZED_401             0x81 /* UNAUTHORIZED */
#define COAP_BAD_OPTION_402               0x82 /* BAD_OPTION */
#define COAP_FORBIDDEN_403                0x83 /* FORBIDDEN */
#define COAP_NOT_FOUND_404                0x84 /* NOT_FOUND */
#define COAP_METHOD_NOT_ALLOWED_405       0x85 /* METHOD_NOT_ALLOWED */
#define COAP_NOT_ACCEPTABLE_406           0x86 /* NOT_ACCEPTABLE */
#define COAP_PRECONDITION_FAILED_412      0x8c /* BAD_REQUEST */
#define COAP_REQUEST_ENTITY_TOO_LARGE_413 0x8d /* REQUEST_ENTITY_TOO_LARGE */
#define COAP_UNSUPPORTED_MEDIA_TYPE_415   0x8f /* UNSUPPORTED_MEDIA_TYPE */
#define COAP_INTERNAL_SERVER_ERROR_500    0xa0 /* INTERNAL_SERVER_ERROR */
#define COAP_NOT_IMPLEMENTED_501          0xa1 /* NOT_IMPLEMENTED */
#define COAP_BAD_GATEWAY_502              0xa2 /* BAD_GATEWAY */
#define COAP_SERVICE_UNAVAILABLE_503      0xa3 /* SERVICE_UNAVAILABLE */
#define COAP_GATEWAY_TIMEOUT_504          0xa4 /* GATEWAY_TIMEOUT */
#define COAP_PROXYING_NOT_SUPPORTED_505   0xa5 /* PROXYING_NOT_SUPPORTED */


#define COAP_READ                          1
#define COAP_WRITE                         2
#define COAP_EXECUTE                       3
#define COAP_ACK                           4
#define COAP_OBSERVE                       5
#define COAP_REG_RSP                       6
#define COAP_CLOSE_RSP                     7

#define COAP_RESPONSE_TIMEOUT             2
#define COAP_MAX_RETRANSMIT               4
#define COAP_ACK_RANDOM_FACTOR            1.5
#define COAP_MAX_TRANSMIT_WAIT            ((COAP_RESPONSE_TIMEOUT*((1 <<(COAP_MAX_RETRANSMIT+1))-1)*COAP_ACK_RANDOM_FACTOR))

#define MIPL_BLOCK1  5
#define MIPL_BLOCK2  5
#define MIPL_BLOCK2TH  1
#define MIPL_PORT  0
#define MIPL_KEEPALIVE  300
#define MIPL_DEBUG  0
#define MIPL_BOOT  0
#define MIPL_ENCRYPT  0

#define NBIOT_SOCK_BUF_SIZE 512

typedef enum
{
	MIPL_DEBUG_LEVEL_NONE = 0,
	MIPL_DEBUG_LEVEL_RXL,
	MIPL_DEBUG_LEVEL_RXL_RXD,
	MIPL_DEBUG_LEVEL_TXL_TXD,
} MIPL_DEBUG_LEVEL_E;


typedef struct
{
	uint8_t boot;
	uint8_t encrypt;
	MIPL_DEBUG_LEVEL_E debug;
	uint16_t port;
	uint32_t keep_alive;
	size_t uri_len;
	const char* uri;
	size_t ep_len;
	const char* ep;
	uint8_t block1;	//COAP option BLOCK1(PUT or POST),0-6. 2^(4+n)  bytes
	uint8_t block2;	//COAP option BLOCK2(GET),0-6. 2^(4+n)  bytes
	uint8_t block2th;	//max size to trigger block-wise operation,0-2. 2^(8+n) bytes
} MIPL_T;

void M5310_Power_Init(void);

uint32_t ip_SendData(int8_t * buf, uint32_t len);

void netif_rx(uint8_t*buf,uint16_t *read);

void init_miplconf(uint32_t lifetime,const char *uri,const char *ep);

void m5310_addobj(uint16_t		objid,
  	              uint16_t		instid);
void m5310_delobj(uint16_t 	 objid,
				   uint16_t  instid);
void m5310_register_request(void);

void m5310_close_request(void);

void m5310_notify_upload(nbiot_uri_t *uri,uint8_t type,char *data,bool tranmmit,uint16_t ackid);

void m5310_read_upload(nbiot_uri_t *uri,uint8_t type,char *data,bool tranmmit,uint16_t ackid);

void m5310_write_rsp(bool suc,uint16_t ackid);

void m5310_execute_rsp(bool suc,uint16_t ackid);

#endif
